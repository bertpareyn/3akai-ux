casper.test.comment('Widget - Edit content');

/**
 * Verify that the editmodal can be opened
 */
var verifyOpenEditContent = function() {
    casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
        casper.click('#content-clip-container .oae-clip-content > button');
        casper.waitForSelector('button.oae-trigger-editcontent', function() {
            casper.test.assertVisible('button.oae-trigger-editcontent', 'Edit content trigger exists');
            casper.click('button.oae-trigger-editcontent');
            // Wait untill the modal is visible
            casper.waitUntilVisible('#editcontent-modal', function() {
                casper.test.assertVisible('#editcontent-modal', 'Edit content pane is showing after trigger');
                casper.click('#content-clip-container .oae-clip-content > button');
            });
        });
    });
};

/**
 * Verify that the editcontent form is present
 */
var verifyEditContentFormElements = function() {
    casper.waitForSelector('#editcontent-modal', function() {
        casper.test.assertVisible('#editcontent-modal', 'The editcontent modal is visible');
        casper.test.assertExists('#editcontent-modal form#editcontent-form','The edit content form is present');
        casper.test.assertExists('#editcontent-modal form#editcontent-form #editcontent-name','The edit content name field is present');
        casper.test.assertExists('#editcontent-modal form#editcontent-form #editcontent-description','The edit content description field is present');
        casper.test.assertExists('#editcontent-modal form#editcontent-form button[type="submit"]','The edit content form submit button is present');
    });
};

/**
 * Verify that the following forms give an error:
 *  - Empty form
 *  - Form without name
 * 
 * Every other form doesn't generate an error
 */
var verifyEditContentFormValidate = function() {
    casper.then(function() {
        // Empty form
        casper.fill('form#editcontent-form', {
            'editcontent-name': '',
            'editcontent-description': ''
        }, false);
        casper.click('#editcontent-form button[type="submit"]');
        casper.test.assertVisible('#editcontent-name-error', 'Verify validating empty form, name-error is visible');
    });

    casper.then(function() {
        // Form without name
        casper.fill('form#editcontent-form', {
            'editcontent-name': '',
            'editcontent-description': 'Description'
        }, false);
        casper.click('#editcontent-form button[type="submit"]');
        casper.test.assertVisible('#editcontent-name-error', 'Verify validating form without name, name-error is visible');
    });
};

/**
 * Verify that content can be edited
 */
var verifyEditContent = function() {
    // Fill the form
    casper.fill('form#editcontent-form', {
        'editcontent-name': 'New content name',
        'editcontent-description': 'New content description'
    }, false);
    // Submit the editcontent form
    casper.click('#editcontent-form button[type="submit"]');
    // Verify that the changes have been persisted
    casper.waitForSelector('#oae-notification-container .alert', function() {
        casper.test.assertDoesntExist('#oae-notification-container .alert.alert-error', 'The content details were successfully saved');
        casper.test.assertSelectorHasText('#content-clip-container h1', 'New content name', 'The content name was successfully renamed to \'New content name\'');
    });

    casper.then(function() {
        // Form with trailing spaces
        casper.fill('form#editcontent-form', {
            'editcontent-name': 'Content name ',
            'editcontent-description': 'Content description',
        }, false);
        casper.click('#editcontent-form button[type="submit"]');
        casper.test.assertSelectorDoesntHaveText('#content-clip-container h1', 'name ', 'The content name was successfully saved without trailing spaces, \'Content name \' doesn\'t exists');
        casper.test.assertSelectorHasText('#content-clip-container h1', 'name', 'The content name was successfully saved without trailing spaces, \'Content name\' does exists');
    });
};

casper.start('http://test.oae.com/', function(){
    // Create a user to test with
    var user1 = null;
    userUtil().createUsers(1, function(users) {
        user1 = users[0];
    });
    // Log in with that user
    casper.then(function() {
        userUtil().doLogIn(user1.username, 'password');
    });

    var fileUrl1 = null;
    casper.then(function() {
        contentUtil().createFile(function(fileUrl) {
            fileUrl1 = fileUrl;

            casper.thenOpen('http://test.oae.com' + fileUrl1, function() {
                // Verify that editcontents can be triggered
                casper.then(function() {
                    casper.echo('Verify editcontent modal','INFO');
                    verifyOpenEditContent();
                });

                // Verify that the edit content form is opened and visible
                casper.then(function() {
                    casper.echo('Verify editcontent form elements','INFO');
                    verifyEditContentFormElements();
                });

                // Verify edit content form validation
                casper.then(function() {
                    casper.echo('Verify editcontent form validation','INFO');
                    verifyEditContentFormValidate();
                });

                // Verify that the details can be edited
                casper.then(function() {
                    casper.echo('Verify content can be edited','INFO');
                    verifyEditContent();
                });
            });
        });
    });

    // Log out again
    casper.then(function() {
        userUtil().doLogOut();
    });
});

casper.run(function() {
    casper.test.done();
});
