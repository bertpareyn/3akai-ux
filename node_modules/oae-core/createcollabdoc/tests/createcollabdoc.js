casper.test.comment('Create collab doc');

/**
 * Open the create collab doc modal with assertions
 */
var verifyOpenCreateCollabDoc = function() {
    casper.click('.oae-clip-secondary .oae-clip-content > button');
    casper.waitForSelector('.oae-trigger-createcollabdoc', function() {
        casper.test.assertExists('.oae-trigger-createcollabdoc', 'Create collab doc trigger exists');
        casper.click('.oae-trigger-createcollabdoc');
        casper.wait(1000, function() {
            casper.test.assertVisible('#createcollabdoc-modal', 'Create collab doc pane is showing after trigger');
            casper.click('.oae-clip-secondary .oae-clip-content > button');
        });
    });
};

/**
 * Open the create collab doc modal
 */
var openCreateCollabDoc = function() {
    casper.click('.oae-clip-secondary .oae-clip-content > button');
    casper.waitForSelector('.oae-trigger-createcollabdoc', function() {
        casper.click('.oae-trigger-createcollabdoc');
        casper.wait(1000, function() {
            casper.click('.oae-clip-secondary .oae-clip-content > button');
        });
    });
};

/**
 * Goes through the workflow of creating a collaborative document
 */
var verifyCreateCollabDoc = function(user2Id) {
    // Verify the form is present
    casper.test.assertExists('form#createcollabdoc-form', 'The create collab doc form is present');
    casper.test.assertExists('#createcollabdoc-name', 'The collab doc name field is present');
    // Fill the form
    casper.fill('form#createcollabdoc-form', {
        'createcollabdoc-name': 'CasperJS test document'
    }, false);

    // Verify the change permissions button is there
    casper.test.assertExists('#createcollabdoc-change-permissions', 'The \'change permissions\' button is present');
    // Click the change permissions button
    casper.click('#createcollabdoc-change-permissions');
    // Verify the permissions radio button group and share input fields are there
    casper.test.assertExists('#createcollabdoc-permissions-container #setpermissions-container input[type="radio"]', 'The \'change permissions\' radio button group is present');
    casper.test.assertExists('#createcollabdoc-permissions-container .as-selections input', 'The \'share\' input field is present');
    // Select the public permission
    casper.click('#createcollabdoc-permissions-container #setpermissions-container input[type="radio"][value="public"]', 'Select \'public\' permissions for the collab doc');
    // Verify the update button is present
    casper.test.assertExists('#setpermissions-savepermissions', 'The \'Update\' button is present');
    // Share it with the second user that was created for the test
    casper.thenEvaluate(function(user2Id) {
        document.querySelector('#createcollabdoc-permissions-container .as-selections input').value = user2Id;
    }, user2Id);
    // Click the input field to trigger the list
    casper.click('#createcollabdoc-permissions-container .as-selections input');
    casper.waitForSelector('.as-list li', function() {
        // Verify there is at least one item in the autosuggestions
        casper.test.assertExists('.as-list li', 'At least one suggestion for \'' + user2Id + '\' was returned from the server');
        // Click the first suggestion in the list
        casper.click('.as-list li');
        // Click the update button
        casper.click('#setpermissions-savepermissions', 'Update the permission changes');

        // Verify the 'create document' button is present
        casper.test.assertExists('#createcollabdoc-create', 'The \'Create document\' button is present');
        // Click the submit button
        casper.click('#createcollabdoc-create');
        // Wait for a second and verify that the user was redirected to the content profile page of the collab doc
        casper.wait(1000, function() {
            casper.test.assertVisible('#content-clip-container', 'Content profile is shown after creation of collab doc');
            casper.test.assertSelectorHasText('#content-clip-container h1', 'CasperJS test document', 'Title matches \'CasperJS test document\'');
        });
    });
};

/**
 * Verify the form validation by checking the following:
 *     - Try submitting a form without putting in a title
 */
var verifyCreateCollabDocValidation = function() {
    // Fill the form
    casper.fill('form#createcollabdoc-form', {
        'createcollabdoc-name': ''
    }, false);
    // Click the submit button
    casper.click('#createcollabdoc-create');
    // Verify that an error label is shown
    casper.test.assertExists('#createcollabdoc-name-error', 'Create collabdoc form successfully validated empty form');
};

casper.start('http://cam.oae.com', function() {
    // Create a couple of users to test createcollabdoc with
    var user1 = null;
    var user2 = null;
    userUtil().createUsers(2, function(users) {
        user1 = users[0];
        user2 = users[1];
    });

    // Login with that user
    casper.then(function() {
        userUtil().doLogIn(user1.username, 'password');
    });

    // Open the createcollabdoc modal
    casper.then(function() {
        casper.echo('Verify open create collab doc modal', 'INFO');
        verifyOpenCreateCollabDoc();
    });

    // Create a collabdoc
    casper.then(function() {
        casper.echo('Verify create collab doc', 'INFO');
        verifyCreateCollabDoc(user2.username);
    });

    // Verify the collab doc form validation
    casper.thenOpen('http://cam.oae.com/me', function() {
        casper.echo('Verify create collab doc validation', 'INFO');
        casper.then(openCreateCollabDoc);
        casper.then(verifyCreateCollabDocValidation);
    });

    // Log out at the end of the test
    casper.then(function() {
        userUtil().doLogOut();
    });
});

casper.run(function() {
    this.test.done();
});
