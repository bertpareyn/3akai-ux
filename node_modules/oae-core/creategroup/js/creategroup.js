/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid) {

        var $rootel = $('#' + uid);

        // Defaults the visibility of the group
        var visibility = oae.api.config.getValue('oae-principals', 'group', 'visibility');

        /**
         * Resets the widget to its original state
         */
        var doReset = function() {
            // Unbind the visibility event
            $(document).off('oae-visibility-changed');

            // Reset the form
            $('#creategroup-name').val('');
            $('#creategroup-form *').removeAttr('disabled');

            // Reset the permissions
            visibility = oae.api.config.getValue('oae-principals', 'group', 'visibility');
        };

        /**
         * Binds and executes the widget reset function when the modal dialog is closed
         */
        var initReset = function() {
            $('#creategroup-container').on('hidden', function(ev) {
                if ($(ev.target).hasClass('modal')) {
                    doReset();
                }
            });
        };

        /**
         * Initializes the setpermissions widget in large view
         */
        var initSetPermissions = function() {
            oae.api.util.template().render('#creategroup-permissions-template', {
                'visibility': visibility,
            }, $('#creategroup-permissions-container', $rootel));
        };

        /**
         * Triggers the necessary changes when the initial permissions for the group have changed.
         */
        var initPermissionsChanged = function() {
            $(document).on('oae-visibility-changed', function(ev, data) {
                $('.oae-visibility-choice', $rootel).removeClass('checked');
                $(data.radio).parents('.oae-visibility-choice').addClass('checked');
                visibility = $(data.radio).val();
            });
        };

        /**
         * Creates a random number that will be used as an alias for the new group
         * TODO: Dummy id can be removed once the API changes have been made which eliminate the need for it.
         * @return  {Number}   Random number used as group alias
         */
        var createRandomAlias = function() {
            return Math.round(Math.random() * 9999999);
        };

        /**
         * Creates the group using the data for name and visibility provided
         */
        var doCreateGroup = function() {
            // Disable the form
            $('#creategroup-form *').attr('disabled', 'disabled');

            // Create the group
            var displayName = $('#creategroup-name').val();
            var alias = createRandomAlias();
            var joinable = oae.api.config.getValue('oae-principals', 'group', 'joinable');
            oae.api.group.createGroup(alias, displayName, '', visibility, joinable, [], [], function(success, data) {
                window.location = data.profilePath;
            });
        };

        /**
         * Initializes the create group form and validation
         */
        var setUpValidation = function() {
            var validateOpts = {
                'submitHandler': doCreateGroup
            };
            oae.api.util.validation().validate($('#creategroup-form', $rootel), validateOpts);
        };

        /**
         * Initializes the create group modal dialog
         */
        var initCreateGroupModal = function() {
            $(document).on('click', '.oae-trigger-creategroup', function() {
                initSetPermissions();
                initPermissionsChanged();
                $('#creategroup-container').modal({
                    'backdrop': 'static'
                });
            });
        };

        initCreateGroupModal();
        setUpValidation();
        initReset();

    };
});
