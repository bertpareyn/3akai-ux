casper.echo('Widget - Manage access');

/**
 * Verify that the manageaccess can be opened in a group
 */
var verifyOpenManageAccess = function() {
    casper.waitForSelector('#group-clip-container .oae-clip-content button', function() {
        casper.test.assertExists('#group-clip-container .oae-clip-content button', 'The button for the group clip container is present.');
        casper.click('#group-clip-container .oae-clip-content button');
        casper.waitForSelector('button.group-trigger-manageaccess', function() {
            casper.test.assertExists('button.group-trigger-manageaccess', 'The trigger for the manageaccess is present.');
            casper.click('button.group-trigger-manageaccess');
        });
    });
};

/**
 * Open the manageaccess without verifying
 */
var openManageAccess = function() {
    casper.waitForSelector('#group-clip-container .oae-clip-content button', function() {
        casper.click('#group-clip-container .oae-clip-content button');
        casper.waitForSelector('button.group-trigger-manageaccess', function() {
            casper.click('button.group-trigger-manageaccess');
        });
    });
};

/**
 * Close the manageaccess
 */
 var closeManageAccess = function() {
    casper.click('button.close');
    // The clip container is still open when you just close the manageaccess screen
    casper.waitForSelector('#group-clip-container .oae-clip-content button', function() {
        casper.click('#group-clip-container .oae-clip-content button');
    });
 }

/**
 * Verify that a user can be added
 *
 * @param   {Object}    username    The username of the user that will be added
 */
var verifyAddUser = function(username) {
    openManageAccess();
    casper.waitForSelector('#manageaccess-share-add-more', function() {
        casper.click('#manageaccess-share-add-more');
        casper.waitForSelector('.as-selections', function() {
            casper.test.assertExists('#manageaccess-share .as-selections input', 'The input field for the add user in manageaccess is present.');
            casper.test.assertExists('#manageaccess-share-role', 'The dropdown list for the role in the add user in manageaccess is present.');
            casper.evaluate(function(username) {
                document.querySelector('#manageaccess-share .as-selections input').value = username;
                document.querySelector('#manageaccess-share-role').value = 'manager';
            }, username);

            // Click on the input field to make the autosuggest list load
            casper.click('#manageaccess-share .as-selections input');

            // Wait for the auto suggest list for the users
            casper.waitForSelector('.as-list li', function() {
                casper.test.assertExists('.as-list li',  'There exists at least one user that matches the user to add in manageaccess.');
                casper.test.assertExists('#manageaccess-share-update', 'The save button to add the user in manageaccess is present.')
                // Click the first user (the one we want)
                casper.click('.as-list li');
                // Click the add button
                casper.click('#manageaccess-share-update');

                // Wait for the save button to load
                casper.waitForSelector('#manageaccess-overview-save', function() {
                    // Save the user to the group
                    casper.click('#manageaccess-overview-save');
                });
            });
        });
    });
};

/**
 * Verify that the visibility is changed to type
 * Need to be in the group page without the manageaccess opened
 *
 * @param   {String}    type    The type the visibility is changed to, can be 'private', 'loggedin' and 'public' else public will be used
 *
 * Leave the change visibility tab of the manageaccess open
 */
var verifyVisbilityIsChanged = function(type) {
    openManageAccess();
    casper.waitForSelector('#manageaccess-change-visibility', function() {
        casper.click('#manageaccess-change-visibility');
        casper.waitForSelector('#manageaccess-overview-save', function() {
            if (type === 'private' || type === 'loggedin' || type === 'public') {
                casper.test.assertExists('label[for="oae-visibility-' + type + '"]');
            } else {
                casper.test.assertExists('label[for="oae-visibility-public"]');
            }
        });
    });
};

/**
 * Change the visibility without verifying
 * Need to be in the change visbility tab of the manageaccess menu
 *
 * @param   {String}    type    The type the visibility is changed to, can be 'private', 'loggedin' and 'public' else public will be used
 *
 * Closes the manageaccess
 */
var changeVisibility = function(type) {
    if (type === 'private' || type === 'loggedin' || type === 'public') {
        casper.click('#oae-visibility-' + type);
    } else {
        casper.click('#oae-visibility-public');
    }
    casper.click('#manageaccess-visibility-save');
    casper.waitForSelector('#manageaccess-overview-save', function() {
        casper.click('#manageaccess-overview-save');
    });
};

/**
 * Verify that the visibility can be changed
 * Change the visibility and then test if it actually is changed.
 * Do this for every visibility type
 */
var verifyChangeVisibility = function() {
    // Change the visibility to private, save it and verify that this is possible
    casper.then(function() {
        casper.test.assertExists('#manageaccess-change-visibility');
        casper.click('#manageaccess-change-visibility');
        casper.waitForSelector('#manageaccess-visibility', function() {
            casper.test.assertExists('#manageaccess-visibility');
            casper.test.assertExists('#manageaccess-visibility-save');
            casper.click('#oae-visibility-private');
            casper.click('#manageaccess-visibility-save');
            casper.waitForSelector('#manageaccess-overview-save', function() {
                casper.test.assertExists('#manageaccess-overview-save');
                casper.click('#manageaccess-overview-save');
            });
        });
    });
    
    // Check if the visibility actually changed
    casper.then(function() {
        verifyVisbilityIsChanged('private');
    });
    
    // Change the visibility to loggedin
    casper.then(function() {
        changeVisibility('loggedin');
    });
    
    // Check if the visibility actually changed
    casper.then(function() {
        verifyVisbilityIsChanged('loggedin');
    });
    
    // Change the visibility to loggedin
    casper.then(function() {
        changeVisibility('public');
    });
    
    // Check if the visibility actually changed
    casper.then(function() {
        verifyVisbilityIsChanged('public');
        casper.click('button.manageaccess-cancel');
        // Close the manageaccess screen
        closeManageAccess();
    });
};

/**
 * Verify that the access of a user can be changed
 */
var verifyChangeAccess = function() {
    // Change the access of the user from manager to member
    casper.then(function() {
        openManageAccess();
        casper.waitForSelector('#manageaccess-overview-shared', function() {
            casper.evaluate(function(){
                // TODO: The casper events aren't properly sent out so the change in the select isn't registered
                //       Need to find a way to do this in casper, right now the tests here will fail
                document.querySelector('#manageaccess-overview-selected>li:nth-child(1) select').value = 'member';
                document.getElementById('manageaccess-overview-save').removeAttribute('disabled');
            });
            casper.click('#manageaccess-overview-save');
        });
    });
    
    // Test if the user is now a member and change its access to manager
    casper.then(function() {
        openManageAccess();
        casper.waitForSelector('#manageaccess-overview-shared', function() {
            casper.test.assertExists('#manageaccess-overview-selected>li:nth-child(1) select>option[value="member"][selected="true"]');
            casper.evaluate(function(){
                // TODO: The casper events aren't properly sent out so the change in the select isn't registered
                //       Need to find a way to do this in casper, right now the tests here will fail
                document.querySelector('#manageaccess-overview-selected>li:nth-child(1) select').value = 'manager';
                document.getElementById('manageaccess-overview-save').removeAttribute('disabled');
            });
            casper.click('#manageaccess-overview-save');
        });
    });
    
    // Test if the user in now a manager
    casper.then(function() {
        openManageAccess();
        casper.waitForSelector('#manageaccess-overview-shared', function() {
            casper.test.assertExists('#manageaccess-overview-selected>li:nth-child(1) select>option[value="manager"][selected="true"]');
            closeManageAccess();
        });
    });
};

casper.start('http://test.oae.com', function() {
    var user1 = null;
    var user2 = null;
    // Create two users to be able to test with
    userUtil().createUsers(2, function(users) {
        user1 = users[0];
        user2 = users[1];
    });
    
    // Log in
    casper.then(function() {
        userUtil().doLogIn(user1.username, 'password');
    });
    
    // Make a group
    var group1 = null;
    casper.then(function() {
        groupUtil().createGroup(function(group) {
            group1 = group;
        });
    });
    
    casper.then(function(){
        // Do the actual testing
        casper.thenOpen('http://test.oae.com' + group1.profilePath, function() {
            // Verify that the manageaccess can be opened
            casper.then(function() {
                casper.echo('Verify open manageaccess');
                verifyOpenManageAccess();
            });
            
            // Verify that a user can be added
            casper.then(function() {
                casper.echo('Verify add user', 'INFO');
                verifyAddUser(user2.username);
            });
            
            // Verify that the visibility can be changed
            casper.then(function() {
                casper.echo('Verify change visibility');
                verifyChangeVisibility();
            });
            
            // Verify that the access of a user can be changed
            casper.then(function() {
                // Change the access from user2 to test with
                casper.echo('Verify change access');
                verifyChangeAccess(user1.id, group1);
            });
        });
    });

    // Log out
    casper.then(function() {
        userUtil().doLogOut();
    })
});

casper.run(function() {
    casper.test.done();
});
