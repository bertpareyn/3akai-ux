/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.jeditable'], function($, oae) {

    return function(uid, showSettings) {

        // The widget container
        $rootel = $('#' + uid);

        // Regular expression that matches valid links
        var linkRegExp = /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i;

        // Defaults the visibility for the files
        var visibility = oae.api.config.getValue('oae-content', 'visibility', 'links');

        // Keeps track of the links to add
        var addedLinks = [];

        /**
         * Resets the state of the widget when the modal dialog has been closed
         */
        var doReset = function() {
            // Hide all steps
            $('.modal-body > div', $rootel).hide();

            // Show the first step
            $('.modal-body > div:first-child', $rootel).show();

            // Reset the selected links list
            addedLinks = [];

            // Resets the link visibility
            visibility = oae.api.config.getValue('oae-content', 'visibility', 'links');

            // Reset controls
            $('#createlink-next', $rootel).attr('disabled', 'disabled');
            $('#createlink-next', $rootel).show();
            $('#createlink-link-dump', $rootel).val('');
            $('#createlink-visibility', $rootel).hide();
            $('#createlink-docreate', $rootel).hide();
            $('#createlink-docreate', $rootel).removeAttr('disabled');

            // Reset the progress bar
            $('.progress', $rootel).hide();
            $('.bar', $rootel).css('width', '0%');
        };

        /**
         * Binds and executes the widget reset function when the modal dialog is closed
         */
        var initReset = function() {
            $('#createlink-container', $rootel).on('hidden', function(ev) {
                if ($(ev.target).hasClass('modal')) {
                    doReset();
                }
            });
        };

        /**
         * Verifies and returns that a URL is valid or not
         * @param  {String}   url   String to be tested as url
         */
        var isValidURL = function(url) {
            var urlRegex = new RegExp(linkRegExp);
            return urlRegex.test(url);
        };

        /**
         * Renders a list of the added links to create
         */
        var renderAdded = function() {
            oae.api.util.template().render('#createlink-selected-template', {'links': addedLinks}, $('#createlink-selected-container'));

            // Hide the spinning icon with jQuery (https://github.com/FortAwesome/Font-Awesome/issues/729)
            $('#createlink-selected-container li .icon-spinner').hide();

            /**
             * Saves the edited link name to the appropriate item in the Array of selected links
             *
             * @param  {String}   value   The new value for the item
             * @return {String}   value   The value to show in the editable field after editing completed
             */
            var editableSubmitted = function(value) {
                value = $.trim(value);
                var prevValue = this.revert;
                var $listItemContainer = $($(this).parents('.oae-listitem'));
                var $listItem = $(this).parents('li.oae-list-item');
                if (!value) {
                    return prevValue;
                } else {
                    var linkIndex = $('#createlink-selected-container li').index($listItem);
                    addedLinks[linkIndex].displayName = value;
                    return value;
                }
            };

            // Apply jEditable for inline editing of link names
            $('.jeditable-field').editable(editableSubmitted, {
                'onblur': 'submit'
            });

            // Apply jQuery Tooltip
            $('[rel="tooltip"]', $rootel).tooltip();
        };

        /**
         * Adds selected links to the list of links to create if it is not a duplicate.
         *
         * @param  {String}   url   The link to be created
         */
        var addToSelected = function(url) {
            var dupe = false;
            $.each(addedLinks, function(index, link) {
                if (link.displayName === url) {
                    dupe = true;
                }
            });

            if (dupe) {
                return false;
            }

            // Create the link object
            var linkObj = {
                '_id': 'id_' + Math.round(Math.random() * 9999999),
                'link': url,
                'displayName': url,
                'description': '',
                'type': 'link'
            };

            // Add the link to the queue
            addedLinks.push(linkObj);
        };

        /**
         * Removes a selected link from the list and resets the widget when no links remain
         */
        var setUpDelete = function() {
            $rootel.on('click', '.createlink-trash', function(ev) {
                // Get the index of the list item
                var $listItem = $(this).parents('li.oae-list-item');
                var linkIndex = $('#createlink-selected-container li').index($listItem);
                // This index corresponds to the Array from which we'll remove the added link
                addedLinks.splice(linkIndex, 1);
                // Also remove it from the UI
                $listItem.remove();
                // If there are no links left reset the widget
                if (!addedLinks.length) {
                    doReset();
                }
            });
        };

        /**
         * Updates the cached link data with the updated list of members when a link has been shared.
         */
        var initShareChanged = function() {
            $(document).on('oae.trigger.setpermissionsshared', function(ev, data) {
                $.each(addedLinks, function(index, link) {
                    link.viewers = data.viewers;
                });
            });
        };

        /**
         * Triggers the necessary changes when permissions for the links to be created have been changed.
         */
        var initPermissionsChanged = function() {
            $(document).on('oae.trigger.setpermissionspermissionschanged', function(ev, data) {
                visibility = data.visibility;
            });
        };

        /**
         * Shows the final step in the upload widget where users can edit link names,
         * delete added links and change permissions before adding them to the system.
         */
        var nextStep = function() {
            // Hide all containers
            $('.modal-body > div:visible').hide();
            // Show the second and last step
            $('.modal-body > div:last-child').show();
            $('#createlink-visibility', $rootel).show();
            $('#createlink-docreate', $rootel).show();
            $('#createlink-next').hide();

            // Trigger the setpermissions widget
            $(document).trigger('oae.trigger.setpermissions', {
                'viewers': [],
                'visibility': visibility,
                'target': $('#createlink-permissions-container', $rootel)
            });
        };

        /**
         * When going to the next step the entered links will be validated and sent through to the next step
         */
        var initNextStep = function() {
            $('#createlink-next').on('click', function() {
                // Split out the textarea into an Array of links
                var links = $('#createlink-link-dump', $rootel).val().split('\n');

                // Loop over the links and validate them before adding them to the queue
                $.each(links, function(index, link) {
                    if (link.indexOf('http://') === -1) {
                        link = 'http://' + link;
                    }
                    if (link && isValidURL(link)) {
                        addToSelected(link);
                    }
                });

                // If there was at least one valid link go to the next step
                if (addedLinks.length) {
                    renderAdded();
                    nextStep();
                }
            });
        };

        /**
         * Updates the progress indicator
         *
         * @param  {Number}   progress   Number between 0 and 100 indicating the upload progress
         */
        var updateProgress = function(progress) {
            $('.bar', $rootel).css('width', progress + '%');
        };

        /**
         * Starts the link creation process. This iterates over all added links and uploads them one at
         * a time. Regular updates are provided in the form of a progress bar, loading spinner icon and success or fail icon
         */
        var initLinkCreation = function() {
            $('#createlink-docreate').off('click').on('click', function() {
                var done = 0;

                // Show the progress bar when the adding the links starts
                $('.progress', $rootel).show();

                // Disable editing on upload
                $('#createlink-docreate').attr('disabled', 'disabled');
                $('.createlink-trash').attr('disabled', 'disabled');
                $('#createlink-permissions-container *').attr('disabled', 'disabled');

                /**
                 * Calls the api function that creates the link. Progress is shown for each individual link and
                 * the progress bar is updated after each link creation.
                 *
                 * @param  {Number}    index    The index of the link that's currently being created
                 * @param  {Object}    link     The link to create
                 */
                var doCreate = function(index, link) {
                    if (link) {
                        var $listItem = $($('#upload-selected-container li')[index]);
                        var $spinner = $listItem.find('.icon-spinner');
                        var $ok = $listItem.find('.icon-ok');
                        var $warning = $listItem.find('.icon-warning-sign');

                        // Add focus to the list element so the browser scrolls
                        $listItem.focus();
                        $spinner.show();
                        oae.api.content.createLink(link.displayName, link.description, visibility, link.link, [], link.viewers, function(error, data) {
                            $spinner.hide();
                            if (!error) {
                                $ok.show();
                            } else {
                                $warning.show();
                            }

                            done++;
                            if (done !== addedLinks.length) {
                                updateProgress((done / addedLinks.length) * 100);
                                doCreate(done, addedLinks[done]);
                            } else {
                                $(window).trigger('done.addcontent.oae');
                                updateProgress(100);
                                $('#createlink-docreate').hide();
                                $('#createlink-container').modal('hide');
                            }
                        });
                    }
                };

                doCreate(0, addedLinks[0]);
            });
        };

        /**
         * Handles changes in the link dump textarea. If no links are pasted into the area the `next` button will be disabled.
         */
        var initLinkDump = function() {
            $('#createlink-link-dump').on('keyup paste', function(ev) {
                // The paste event fires before the textarea values changes so we add a small timeout
                setTimeout(function () {
                    // Split out the textarea into an Array of links
                    var links = $('#createlink-link-dump', $rootel).val().split('\n');

                    // Loop over the links and validate them
                    var valid = false;
                    $.each(links, function(index, link) {
                        if (link.indexOf('http://') === -1) {
                            link = 'http://' + link;
                        }
                        if (link && isValidURL(link)) {
                            valid = true;
                        }
                    });

                    if (valid) {
                        $('#createlink-next', $rootel).removeAttr('disabled');
                    } else {
                        $('#createlink-next', $rootel).attr('disabled', 'disabled');
                    }
                }, 1);
            });
        };

        /**
         * Initializes the create link modal dialog
         */
        var initLinkModal = function() {
            $(document).on('click', '.oae-trigger-createlink', function() {
                $('#createlink-container', $rootel).modal({
                    'backdrop': 'static'
                });
            });
        };

        initReset();
        initNextStep();
        initShareChanged();
        initPermissionsChanged();
        setUpDelete();
        initLinkDump();
        initLinkModal();
        initLinkCreation();

    };
});
